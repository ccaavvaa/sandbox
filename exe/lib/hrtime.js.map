{"version":3,"sources":["../../src/lib/hrtime.ts"],"names":[],"mappings":"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","file":"hrtime.js","sourcesContent":["export type HRTime = [number, number];\r\n\r\nexport class HRTimeTools {\r\n    public static readonly ZERO: HRTime = [0, 0];\r\n\r\n    public static copy(time: HRTime): HRTime {\r\n        return [time[0], time[1]];\r\n    }\r\n    public static compare(t1: HRTime, t2: HRTime): number {\r\n        return t1[0] === t2[0] ? t1[1] - t2[1] : t1[0] - t2[0];\r\n    }\r\n\r\n    public static equals(t1: HRTime, t2: HRTime): boolean {\r\n        return HRTimeTools.compare(t1, t2) === 0;\r\n    }\r\n\r\n    public static add(t1: HRTime, t2: HRTime): HRTime {\r\n        let sec = t1[0] + t2[0];\r\n        let nsec = t1[1] + t2[1];\r\n\r\n        return HRTimeTools.adjust([sec, nsec]);\r\n    }\r\n\r\n    public static diff(t1: HRTime, t2: HRTime): HRTime {\r\n        return HRTimeTools.add(t1, HRTimeTools.negate(t2));\r\n    }\r\n    public static negate(t: HRTime): HRTime {\r\n        return [-t[0], -t[1]];\r\n    }\r\n\r\n    public static multiply(t: HRTime, f: number): HRTime {\r\n        let sec = t[0] * f;\r\n        let nsec = t[1] * f;\r\n        return HRTimeTools.adjust([sec, nsec]);\r\n    }\r\n\r\n    public static divide(t: HRTime, d: number): HRTime {\r\n        return HRTimeTools.multiply(t, 1 / d);\r\n    }\r\n    private static readonly NS_PER_SEC = 1e9;\r\n\r\n    private static adjust(t: HRTime): HRTime {\r\n        if (t[0] * t[1] < 0) {\r\n            const t2: HRTime = t[1] < 0 ?\r\n                [t[0] - 1, HRTimeTools.NS_PER_SEC + t[1]] :\r\n                [t[0] + 1, -HRTimeTools.NS_PER_SEC + t[1]];\r\n            return HRTimeTools.adjust(t2);\r\n        }\r\n\r\n        let f = t[0] >= 0 ? Math.floor : Math.ceil;\r\n        let sec = f(t[0]);\r\n        let nsec = (t[0] - sec) * HRTimeTools.NS_PER_SEC + t[1];\r\n        f = nsec >= 0 ? Math.floor : Math.ceil;\r\n        let sec2 = f(nsec / HRTimeTools.NS_PER_SEC);\r\n        return [sec + sec2, f(nsec - sec2 * HRTimeTools.NS_PER_SEC)];\r\n    }\r\n}\r\n"]}