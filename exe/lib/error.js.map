{"version":3,"sources":["../../src/lib/error.ts"],"names":[],"mappings":";;AAAA,6BAA6B;AAC7B,aAAqB,SAAQ,KAAK;IAE9B,YAAY,MAAe,EAAE,OAAgB;QACzC,MAAM,GAAG,MAAM,IAAI,GAAG,CAAC;QACvB,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YACX,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;QACxC,CAAC;QACD,KAAK,CAAC,OAAO,CAAC,CAAC;QAEf,IAAI,CAAC,MAAM,GAAG,MAAM,IAAI,GAAG,CAAC;IAChC,CAAC;CACJ;AAXD,0BAWC","file":"error.js","sourcesContent":["import * as http from 'http';\r\nexport class MyError extends Error {\r\n    public readonly status: number;\r\n    constructor(status?: number, message?: string) {\r\n        status = status || 500;\r\n        if (!message) {\r\n            message = http.STATUS_CODES[status];\r\n        }\r\n        super(message);\r\n        // Error.captureStackTrace(this, new.target);\r\n        this.status = status || 500;\r\n    }\r\n}\r\n"]}